name: Test

on:
  push:
    branches:
      - master
      - "release/**"
    paths:
      - "**.py"
  pull_request:
    paths:
      - "**.py"

jobs:
  check:
    name: Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.x"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install poetry~=1.1.0
          poetry config virtualenvs.create false
          poetry install
      - name: Check imports using isort
        run: isort . --check
      - name: Check formatting using Black
        run: black --check .
      - name: Lint using Flake8
        run: flake8 .
      - name: Type checking using Mypy
        run: mypy .

  test:
    name: Python ${{ matrix.python-version }} - Django ${{ matrix.django-version }}
    runs-on: ubuntu-latest
    needs: check
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10"]
        django-version: ["3.0", "3.1", "3.2", "4.0"]
        include:
          - python-version: "3.10"
            django-version: "4.0"
            codecov: true
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies with Django ${{ matrix.django-version }}
        run: |
          python -m pip install --upgrade pip
          pip install poetry~=1.1.0 django~=${{ matrix.django-version }}.0
          poetry config virtualenvs.create false
          poetry install --no-dev -E tests
      - name: Test with pytest
        run: pytest --cov-report=xml
      - name: Send to codecov
        if: matrix.codecov
        uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
