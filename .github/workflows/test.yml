name: Test

on:
  push:
    branches:
      - master
      - 'release/**'
  pull_request:

jobs:
  check:
    name: Check
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - name: Set up Python
      uses: actions/setup-python@v1
      with:
        python-version: '3.x'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install poetry
        poetry config virtualenvs.create false
        poetry install
    - name: Check imports using isort
      run: isort --check-only
    - name: Check formatting using Black
      run: black --check .
    - name: Lint using Flake8
      run: flake8 .

  test:
    name: Python ${{ matrix.python-version }} - Django ${{ matrix.django-version }}
    runs-on: ubuntu-latest
    needs: check
    strategy:
      max-parallel: 4
      matrix:
        python-version: ['3.6', '3.7', '3.8']
        django-version: ['3.0']
        include:
          - python-version: '3.8'
            django-version: '3.0'
            codecov: true
    steps:
    - uses: actions/checkout@v1
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies with Django ${{ matrix.django-version }}
      run: |
        python -m pip install --upgrade pip
        pip install poetry django~=${{ matrix.django-version }}
        poetry config virtualenvs.create false
        poetry install --no-dev -E tests
    - name: Test with pytest
      run: pytest
    - name: Send to codecov
      if: matrix.codecov
      uses: codecov/codecov-action@v1
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
